- !<AssetImportMetadata/8623d71a-72f4-4b4a-8145-82ee82fe45c0>
  ImportedAssetIds:
    TypeScriptAsset: !<reference> af79fabe-6fbd-46c3-8b98-0fd7b687282c
  ImporterName: TypeScriptAssetImporter
  PrimaryAsset: !<reference> af79fabe-6fbd-46c3-8b98-0fd7b687282c
  PackageType: NotAPackage
  LegacyPackagePolicy: ~
  ExtraData:
    {}
  AssetDataMap:
    TypeScriptAsset: !<own> e6d7dc12-7e4c-4555-8f17-867215cb4665
  DependentFiles:
    []
  ImporterSettings: !<AssetImporterSettings>
    {}
  CompressionSettings: !<own> 00000000-0000-0000-0000-000000000000
- !<TypeScriptAssetData/e6d7dc12-7e4c-4555-8f17-867215cb4665>
  SvgIcon: ""
  SetupScript:
    code: ""
  Description: ""
  VersionMajor: 0
  VersionMinor: 0
  VersionPatch: 0
  ComponentUid: deaf92d7-8f12-4c19-93dd-52b152211005
  ExportUid: 00000000-0000-0000-0000-000000000000
  PackagePolicy: CanBeUnpacked
  ScriptInputsHidden:
    _inactive: false
    _playAudio: false
    _renderOrder: false
    _size: false
    addCallbacks: false
    alternateIcon: false
    changeIconOnFocus: false
    contentRequiredOnDeactivate: false
    fontFamily: false
    formatType: false
    icon: false
    inputType: false
    onKeyboardStateChangedCallbacks: false
    onTextChangedCallbacks: false
    placeholderText: false
    useIcon: false
  ScriptTypesHidden:
    {}
  ReadMe: !<reference> 00000000-0000-0000-0000-000000000000
  DeclarationFile: !<reference> 00000000-0000-0000-0000-000000000000
  Tags:
    []
  Attachments:
    []
  DefaultScriptInputs:
    - _renderOrder: 0
      _size: !<Vec3> {x: 30.000000, y: 6.000000, z: 0.000000}
      _inactive: false
      _playAudio: false
      inputType: default
      formatType: date
      placeholderText: ""
      fontFamily: !<reference.Font> 00000000-0000-0000-0000-000000000000
      useIcon: false
      icon: !<reference.Texture> 00000000-0000-0000-0000-000000000000
      changeIconOnFocus: false
      alternateIcon: !<reference.Texture> 00000000-0000-0000-0000-000000000000
      contentRequiredOnDeactivate: false
      addCallbacks: false
      onTextChangedCallbacks:
        []
      onKeyboardStateChangedCallbacks:
        []
  ScriptTypes:
    -
      {}
  InputLines:
    - // @input int _renderOrder
    - '// @input vec3 _size = {6,3,3} {"hint":"Size of the element in centimeters"}'
    - '// @input bool _inactive {"hint":"Inactive Mode: set the element to ignore inputs"}'
    - '// @input bool _playAudio {"label":"Play Audio", "hint":"Play audio on interaction"}'
    - '// @input string inputType = "default" {"widget":"combobox", "values":[{"label":"Default", "value":"default"}, {"label":"Numeric", "value":"numeric"}, {"label":"Password", "value":"password"}, {"label":"Pin", "value":"pin"}]}'
    - '// @input string formatType = "date" {"widget":"combobox", "values":[{"label":"Date", "value":"date"}, {"label":"Email", "value":"email"}, {"label":"URL", "value":"url"}], "showIf":"inputType", "showIfValue":"format"}'
    - '// @input string placeholderText {"hint":"Text that is displayed before any text is entered"}'
    - '// @input Asset.Font fontFamily {"hint":"Font Family"}'
    - '// @input bool useIcon {"hint":"Use an icon?"}'
    - '// @input Asset.Texture icon {"hint":"Icon Texture", "showIf":"useIcon", "showIfValue":true}'
    - '// @input bool changeIconOnFocus {"hint":"Switch to a different icon on focus", "showIf":"useIcon"}'
    - '// @input Asset.Texture alternateIcon {"hint":"Alternate icon used on focus", "showIf":"changeIconOnFocus", "showIfValue":true}'
    - '// @input bool contentRequiredOnDeactivate {"hint":"Throw error if unfocused with no input"}'
    - "// @input bool addCallbacks {\"hint\":\"Enable this to add functions from another script to this component's callbacks\"}"
    - /*
    - "@typedef Callback"
    - "@property {Component.ScriptComponent} scriptComponent"
    - "@property {string} functionName"
    - "*/"
    - '// @input Callback[] onTextChangedCallbacks = {} {"label":"On Text Changed Callbacks", "showIf":"addCallbacks"}'
    - '// @input Callback[] onKeyboardStateChangedCallbacks = {} {"label":"On Keyboard State Changed Callbacks", "showIf":"addCallbacks"}'
